import Image from 'next/image';
import { FC, useEffect, useState } from 'react';

import styles from '../styles/Track.module.scss';
import img from '../assets/audio-waves 1.png';
import { Track } from '../types/Track';
import { useActions } from '../store/hooks/useActions';
import { useAppDispatch, useAppSelector } from '../store/hooks/redux';
import axios from 'axios';
import { change } from '../store/slices/UserSlice';

interface TrackProps {
  track: Track;
  // active?: boolean
}

const TrackItem: FC<TrackProps> = ({ track }) => {
  const { setActiveTrack, playTrack, pauseTrack, addTrack, removeTrack } = useActions();
  const { active, pause, add } = useAppSelector((state) => state.player);
  const { isAuth, user } = useAppSelector((state) => state.user);
  const dispatch = useAppDispatch();

  useEffect(() => {
    checkIsAdd();
  }, [user, add, active]);

  const addHandler = () => {
    if (isAuth) {
      if (!add) {
        axios
          .patch('http://localhost:4000/users/addTrack/' + user._id, { trackId: active._id })
          .then((res) => dispatch(change(res.data)));
        addTrack();
      } else {
        axios
          .patch('http://localhost:4000/users/removeTrack/' + user._id, { trackId: active._id })
          .then((res) => dispatch(change(res.data)));
        removeTrack();
      }
    } else {
      alert('Нужно авторизоваться');
    }
  };

  const play = () => {
    if (active) {
      if (track._id !== active._id) {
        setActiveTrack(track);
      } else {
        playTrack();
      }
    } else {
      setActiveTrack(track);
    }
  };

  const pauseTracks = () => {
    pauseTrack();
  };

  const checkIsAdd = () => {
    if (user?.tracks.some((i) => i._id === active?._id)) {
      addTrack();
    } else {
      removeTrack();
    }
  };

  return (
    <div className={styles.block}>
      <div className={styles.i}>
        <Image
          src={`http://localhost:4000/${track.picture}`}
          width={60}
          height={60}
          alt="asd"
          className={styles.image}
        />
        {active?._id === track._id && !pause ? (
          <svg
            onClick={pauseTracks}
            className={styles.pause}
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="white"
            xmlns="http://www.w3.org/2000/svg">
            <path
              d="M16 2C15.2044 2 14.4413 2.31607 13.8787 2.87868C13.3161 3.44129 13 4.20435 13 5V19C13 19.7956 13.3161 20.5587 13.8787 21.1213C14.4413 21.6839 15.2044 22 16 22C16.7956 22 17.5587 21.6839 18.1213 21.1213C18.6839 20.5587 19 19.7956 19 19V5C19 4.20435 18.6839 3.44129 18.1213 2.87868C17.5587 2.31607 16.7956 2 16 2ZM17 19C17 19.2652 16.8946 19.5196 16.7071 19.7071C16.5196 19.8946 16.2652 20 16 20C15.7348 20 15.4804 19.8946 15.2929 19.7071C15.1054 19.5196 15 19.2652 15 19V5C15 4.73478 15.1054 4.48043 15.2929 4.29289C15.4804 4.10536 15.7348 4 16 4C16.2652 4 16.5196 4.10536 16.7071 4.29289C16.8946 4.48043 17 4.73478 17 5V19ZM8 2C7.20435 2 6.44129 2.31607 5.87868 2.87868C5.31607 3.44129 5 4.20435 5 5V19C5 19.7956 5.31607 20.5587 5.87868 21.1213C6.44129 21.6839 7.20435 22 8 22C8.79565 22 9.55871 21.6839 10.1213 21.1213C10.6839 20.5587 11 19.7956 11 19V5C11 4.20435 10.6839 3.44129 10.1213 2.87868C9.55871 2.31607 8.79565 2 8 2ZM9 19C9 19.2652 8.89464 19.5196 8.70711 19.7071C8.51957 19.8946 8.26522 20 8 20C7.73478 20 7.48043 19.8946 7.29289 19.7071C7.10536 19.5196 7 19.2652 7 19V5C7 4.73478 7.10536 4.48043 7.29289 4.29289C7.48043 4.10536 7.73478 4 8 4C8.26522 4 8.51957 4.10536 8.70711 4.29289C8.89464 4.48043 9 4.73478 9 5V19Z"
              fill="black"
            />
          </svg>
        ) : (
          <svg
            className={styles.pause}
            onClick={play}
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="black"
            xmlns="http://www.w3.org/2000/svg">
            <path
              d="M18.54 9.00003L8.87997 3.46003C8.35725 3.15819 7.76397 3.00006 7.16036 3.00172C6.55676 3.00338 5.96435 3.16476 5.4433 3.46947C4.92225 3.77417 4.49112 4.21135 4.19372 4.7366C3.89631 5.26185 3.74321 5.85646 3.74997 6.46003V17.58C3.74997 18.4871 4.11029 19.357 4.75167 19.9983C5.39304 20.6397 6.26293 21 7.16997 21C7.77041 20.999 8.36006 20.8404 8.87997 20.54L18.54 15C19.059 14.6996 19.49 14.268 19.7896 13.7485C20.0891 13.2289 20.2468 12.6397 20.2468 12.04C20.2468 11.4403 20.0891 10.8511 19.7896 10.3316C19.49 9.81206 19.059 9.38044 18.54 9.08003V9.00003ZM17.54 13.19L7.87997 18.81C7.66346 18.9327 7.41884 18.9972 7.16997 18.9972C6.9211 18.9972 6.67648 18.9327 6.45997 18.81C6.24407 18.6854 6.06479 18.5061 5.94015 18.2902C5.81552 18.0743 5.74993 17.8293 5.74997 17.58V6.42003C5.74993 6.17072 5.81552 5.9258 5.94015 5.70989C6.06479 5.49397 6.24407 5.31468 6.45997 5.19003C6.67738 5.06918 6.92127 5.00392 7.16997 5.00003C7.4185 5.00513 7.66211 5.07032 7.87997 5.19003L17.54 10.77C17.756 10.8946 17.9353 11.0739 18.06 11.2898C18.1847 11.5057 18.2504 11.7507 18.2504 12C18.2504 12.2494 18.1847 12.4943 18.06 12.7102C17.9353 12.9262 17.756 13.1054 17.54 13.23V13.19Z"
              fill="black"
            />
          </svg>
        )}
      </div>
      <div className={styles.name}>
        <p className={styles.text}>{track.artist}</p>
        <p className={styles.text}>{track.name}</p>
      </div>
      <div className={styles.hovers}>
        <div onClick={addHandler} className={styles.hover}>
          {active?._id === track._id && (
            <>
              {add ? (
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M18.71 7.20998C18.617 7.11625 18.5064 7.04186 18.3846 6.99109C18.2627 6.94032 18.132 6.91418 18 6.91418C17.868 6.91418 17.7373 6.94032 17.6154 6.99109C17.4936 7.04186 17.383 7.11625 17.29 7.20998L9.84001 14.67L6.71001 11.53C6.61349 11.4367 6.49955 11.3634 6.37469 11.3142C6.24984 11.265 6.11651 11.2409 5.98233 11.2432C5.84815 11.2455 5.71574 11.2743 5.59266 11.3278C5.46959 11.3812 5.35825 11.4585 5.26501 11.555C5.17177 11.6515 5.09846 11.7654 5.04925 11.8903C5.00005 12.0152 4.97592 12.1485 4.97824 12.2827C4.98056 12.4168 5.00929 12.5493 5.06278 12.6723C5.11628 12.7954 5.19349 12.9067 5.29001 13L9.13001 16.84C9.22297 16.9337 9.33358 17.0081 9.45543 17.0589C9.57729 17.1096 9.708 17.1358 9.84001 17.1358C9.97202 17.1358 10.1027 17.1096 10.2246 17.0589C10.3464 17.0081 10.457 16.9337 10.55 16.84L18.71 8.67998C18.8115 8.58634 18.8925 8.47269 18.9479 8.34619C19.0033 8.21969 19.0319 8.08308 19.0319 7.94498C19.0319 7.80688 19.0033 7.67028 18.9479 7.54378C18.8925 7.41728 18.8115 7.30363 18.71 7.20998Z"
                    fill="white"
                  />
                </svg>
              ) : (
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M19 11H13V5C13 4.73478 12.8946 4.48043 12.7071 4.29289C12.5196 4.10536 12.2652 4 12 4C11.7348 4 11.4804 4.10536 11.2929 4.29289C11.1054 4.48043 11 4.73478 11 5V11H5C4.73478 11 4.48043 11.1054 4.29289 11.2929C4.10536 11.4804 4 11.7348 4 12C4 12.2652 4.10536 12.5196 4.29289 12.7071C4.48043 12.8946 4.73478 13 5 13H11V19C11 19.2652 11.1054 19.5196 11.2929 19.7071C11.4804 19.8946 11.7348 20 12 20C12.2652 20 12.5196 19.8946 12.7071 19.7071C12.8946 19.5196 13 19.2652 13 19V13H19C19.2652 13 19.5196 12.8946 19.7071 12.7071C19.8946 12.5196 20 12.2652 20 12C20 11.7348 19.8946 11.4804 19.7071 11.2929C19.5196 11.1054 19.2652 11 19 11Z"
                    fill="white"
                  />
                </svg>
              )}
            </>
          )}
        </div>
        <div className={styles.hover}>
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="white"
            xmlns="http://www.w3.org/2000/svg">
            <path
              d="M20.34 9.32001L6.34 2.32001C5.78749 2.04502 5.16362 1.94712 4.55344 2.03966C3.94326 2.1322 3.37646 2.41068 2.93033 2.83712C2.48421 3.26357 2.18046 3.81723 2.0605 4.42262C1.94054 5.02801 2.0102 5.65566 2.26 6.22001L4.66 11.59C4.71446 11.7198 4.74251 11.8592 4.74251 12C4.74251 12.1408 4.71446 12.2802 4.66 12.41L2.26 17.78C2.0567 18.2367 1.97076 18.737 2.00998 19.2354C2.0492 19.7337 2.21235 20.2144 2.48459 20.6337C2.75682 21.053 3.12953 21.3976 3.56883 21.6362C4.00812 21.8748 4.50009 21.9999 5 22C5.46823 21.9953 5.92949 21.886 6.35 21.68L20.35 14.68C20.8466 14.4302 21.264 14.0473 21.5557 13.5741C21.8474 13.1009 22.0018 12.5559 22.0018 12C22.0018 11.4441 21.8474 10.8992 21.5557 10.4259C21.264 9.9527 20.8466 9.56982 20.35 9.32001H20.34ZM19.45 12.89L5.45 19.89C5.26617 19.9783 5.05973 20.0082 4.85839 19.9759C4.65705 19.9435 4.47041 19.8503 4.32352 19.7089C4.17662 19.5674 4.07648 19.3844 4.03653 19.1844C3.99658 18.9845 4.01873 18.777 4.1 18.59L6.49 13.22C6.52094 13.1483 6.54766 13.0748 6.57 13H13.46C13.7252 13 13.9796 12.8946 14.1671 12.7071C14.3546 12.5196 14.46 12.2652 14.46 12C14.46 11.7348 14.3546 11.4804 14.1671 11.2929C13.9796 11.1054 13.7252 11 13.46 11H6.57C6.54766 10.9252 6.52094 10.8517 6.49 10.78L4.1 5.41001C4.01873 5.22297 3.99658 5.01556 4.03653 4.81558C4.07648 4.6156 4.17662 4.43261 4.32352 4.29115C4.47041 4.1497 4.65705 4.05654 4.85839 4.02416C5.05973 3.99178 5.26617 4.02174 5.45 4.11001L19.45 11.11C19.6138 11.1939 19.7513 11.3214 19.8473 11.4785C19.9433 11.6355 19.994 11.816 19.994 12C19.994 12.1841 19.9433 12.3645 19.8473 12.5216C19.7513 12.6786 19.6138 12.8061 19.45 12.89Z"
              fill="white"
            />
          </svg>
        </div>
      </div>
    </div>
  );
};

export default TrackItem;
